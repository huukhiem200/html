// File: components/ChatPresenter.js

import { ChatHeader } from './ChatHeader.js';
import { InputBar } from './InputBar.js';
import { MessageList } from './MessageList.js';
import { SuggestionList } from './SuggestionList.js';

export class ChatPresenter {
  constructor() {
    this.chatContainer = document.getElementById('chat-container');
    this.toggleButton = document.getElementById('chat-toggle-button'); 
    this.headerSearchForm = document.getElementById('header-search-form');
    this.headerSearchInput = document.getElementById('header-search-input');
    this.suggestionChips = document.querySelectorAll('.suggestion-chip');
    
    this.displayArea = null;
    this.chatInput = null;
    this.chatForm = null;
    this.submitBtn = null;
    this.closeButton = null;
    this.minimizeButton = null;
  }

  /**
   * 1. Ti√™m HTML ban ƒë·∫ßu v√† Query c√°c ph·∫ßn t·ª≠ con
   */
  renderLayout() {
    if (!this.chatContainer) return;
    try {
        // Render n·ªôi dung HTML t·ª´ c√°c component
        this.chatContainer.innerHTML = `
          ${ChatHeader()}
          <div class="message-list" id="display-area"></div>
          ${InputBar()}
        `; 
    } catch (e) {
        console.error("L·ªñI C√ö PH√ÅP COMPONENT KHI RENDER HTML (FATAL):", e);
        return; 
    }

    // üö® QUAN TR·ªåNG: Query c√°c ph·∫ßn t·ª≠ con sau khi ch√∫ng ƒë∆∞·ª£c t·∫°o
    this.displayArea = document.getElementById('display-area');
    this.chatInput = document.getElementById('chat-input');
    this.chatForm = document.getElementById('chat-form');
    this.submitBtn = document.getElementById('chat-submit');
    this.closeButton = document.getElementById('chat-close-button');
    this.minimizeButton = document.getElementById('chat-minimize-button');
    
    if (!this.toggleButton) {
        console.error("L·ªñI KH·ªûI T·∫†O: Kh√¥ng t√¨m th·∫•y #chat-toggle-button.");
    }
  }

  /**
   * 2. G·∫Øn c√°c h√†m x·ª≠ l√Ω (handlers)
   */
  bindEvents(handlers) {
    if (this.toggleButton) {
      this.toggleButton.addEventListener('click', handlers.onToggleChat);
      console.log("‚úÖ S·ª± ki·ªán b·∫≠t/t·∫Øt ch√≠nh ƒë√£ ƒë∆∞·ª£c g·∫Øn.");
    }
    
    if (this.closeButton) {
      this.closeButton.addEventListener('click', handlers.onCloseChat);
    }
    if (this.minimizeButton) {
      this.minimizeButton.addEventListener('click', handlers.onCloseChat);
    }
    
    if (this.headerSearchForm) {
      this.headerSearchForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const text = this.headerSearchInput.value.trim();
        if (text) {
          handlers.onHeaderSearch(text);
          this.headerSearchInput.value = '';
        }
      });
    }

    this.suggestionChips.forEach((chip) => {
      chip.addEventListener('click', () => {
        const question = chip.getAttribute('data-question');
        if (question) {
          handlers.onPageSuggestion(question);
        }
      });
    });

    if (this.chatForm) {
      this.chatForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const text = this.chatInput.value.trim();
        if (text) {
          handlers.onSendMessage(text);
          this.chatInput.value = '';
        }
      });
    }
    
    if (this.chatInput) {
      this.chatInput.addEventListener('input', () => {
        handlers.onChatInput(this.chatInput.value);
      });
      this.chatInput.addEventListener('focus', () => {
        handlers.onChatInput(this.chatInput.value);
      });
    }
  }

  /**
   * üö® H√ÄM B·ªä L·ªñI (ƒê√£ s·ª≠a)
   */
  displaySuggestions(suggestions, keyword) {
    if (!this.displayArea) return;
    this.displayArea.innerHTML = SuggestionList(suggestions, keyword);
    this.attachSuggestionListeners();
  } 

  displayMessages(messages) {
    if (!this.displayArea) return;
    this.displayArea.innerHTML = MessageList(messages);
    this.scrollToBottom();
  } 
  setUIBusy(isBusy) {
    // Ki·ªÉm tra xem c√°c ph·∫ßn t·ª≠ input c√≥ t·ªìn t·∫°i kh√¥ng
    if (this.chatInput) {
      this.chatInput.disabled = isBusy;
    }
    if (this.submitBtn) {
      this.submitBtn.disabled = isBusy;
      // C√≥ th·ªÉ th√™m icon loading ·ªü ƒë√¢y n·∫øu b·∫°n mu·ªën
      // this.submitBtn.innerHTML = isBusy ? '<i class="fas fa-spinner fa-spin"></i>' : '<i class="fa-solid fa-paper-plane"></i>';
    }
    if (isBusy && this.chatInput) {
      this.chatInput.focus();
    }
  }

  toggleChatWindow(isOpen) {
    if (this.chatContainer) {
      this.chatContainer.classList.toggle('is-open', isOpen);
    }
  }
  
  //--- H√ÄM UTILITY ---
  
  resetChatUI() {
    if (this.chatInput) {
      this.chatInput.value = '';
    }
    if (this.displayArea) {
      this.displayArea.innerHTML = '';
    }
  }
  
  scrollToBottom() {
    if (this.displayArea) {
      this.displayArea.scrollTop = this.displayArea.scrollHeight;
    }
  }
  
  attachSuggestionListeners() {
    const items = this.displayArea.querySelectorAll('.suggestion-item');
    items.forEach((item) => {
      const currentItem = item;
      if (!currentItem.dataset.listenerAttached) {
        // eslint-disable-next-line no-param-reassign
        currentItem.dataset.listenerAttached = 'true';
        item.addEventListener('click', (e) => {
          const question = e.currentTarget.getAttribute('data-question');
          if (question) {
            this.chatForm.dispatchEvent(new CustomEvent('suggestionClicked', { detail: question }));
          }
        });
      }
    });
  }
}